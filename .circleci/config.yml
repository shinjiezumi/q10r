# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    working_directory: ~/workspace/src

    docker:
      - image: circleci/php:7.4-fpm-node-browsers
        environment:
          APP_DEBUG: true
          APP_ENV: testing
          APP_KEY: base64:Dummy6uH3OUb3hxN+PAiJKlC+EGZ2KYi8VHxsfdJpLk=
          DB_CONNECTION: circleci
      - image: circleci/postgres:9.6.9-alpine
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circleci_test

    steps:
      # Checkout source
      - checkout:
          path: ~/workspace

      # Install Container modules
      - run:
          name: install packages
          command: |
            sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4EB27DB2A3B88B8B
            sudo apt-get update --allow-releaseinfo-change
            sudo apt update
            sudo apt-get install -y libonig-dev libpq-dev
            sudo docker-php-ext-install pdo_pgsql

      # Install PHP modules
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: composer install
          command: |
            composer install -n --prefer-dist
      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - vendor

      # Install Node modules
      - restore_cache:
          keys:
            - node-v1-{{ checksum "package.json" }}
            - node-v1-
      - run:
          name: yarn install
          command: |
            yarn install
      - save_cache:
          key: node-v1-{{ checksum ".package.json" }}
          paths:
            - node_modules

      # setup database
      - run:
          name: setup database
          command: |
            php artisan migrate
            php artisan db:seed

      # run test
      - run:
          name: run test
          command: |
            ./vendor/bin/phpunit

  deploy:
    working_directory: ~/workspace
    docker:
      - image: buildpack-deps:trusty
    steps:
      # Checkout source
      - checkout

      # Deploy
      - run:
          name: Deploy to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master
workflows:
  version: 2
  release:
    jobs:
      - build
#      - deploy:
#          requires:
#            - build
#          filters:
#            branches:
#              only: master
